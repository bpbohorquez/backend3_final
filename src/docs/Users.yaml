paths:
  /api/users/:
    get:
      summary: Obtiene todos los usuarios
      tags: 
        - Users
      responses:
        "200":
          description: Los usuarios fueron obtenidos correctamente de la base de datos
        "404":
          description: Los usuarios no fueron encontrados
        "500":
          description: Error interno del servidor

  /api/users/{id}:
    get:
      summary: Obtiene usuario por Id
      tags: 
        - Users
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: Id del usuario
      responses:
        "200":
          description: El usuario fue encontrado correctamente en la base de datos
        "404":
          description: El usuario no fue encontrado en la base de datos
        "500":
          description: Error interno del servidor

  /api/users/{id}:
    put:
      summary: Actualiza información de usuario
      tags: 
        - Users
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: Id del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User" 
      responses:
        "200":
          description: El usuario fue actualizado correctamente en la base de datos
        "404":
          description: El usuario no fue encontrado en la base de datos
        "500":
          description: Error interno del servidor

  /api/users/{id}:
    delete:
      summary: Eliminar usuario
      tags: 
        - Users
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: Id del usuario
      responses:
        "200":
          description: El usuario fue eliminado correctamente en la base de datos
        "404":
          description: El usuario no fue encontrado en la base de datos
        "500":
          description: Error interno del servidor


components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id de la base de datos
        first_name:
          type: String
          description: Nombre del usuario
        last_name:
          type: String
          description: Apellido del usuario
        email:
          type: String
          description: Email del usuario
        password:
          type: String
          description: Contraseña del usuario
        role:
          type: String
          description: Rol del usuario
        pets:
          type: Array
          description: Mascotas adoptadas por el usuario
      example:
        _id: 673d417b448d0af3cf5d8a0c
        first_name: "Lucy"
        last_name: "Ondricka"
        email: "Candice.Greenfelder80@hotmail.com"
        password: "coder123"
        role: "admin"
        pets: []